plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    // AnnotationProcessor for kotlin
    id 'org.jetbrains.kotlin.kapt' version '1.7.10'
}
kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of("11"))
    }
}
ext{
    jmhVersion='1.35'
    okhttpVersion='3.6.0'
    sl4jVersion='1.7.24'
    logbackVersion= '1.2.1'
    httpcomponentVersion='4.5.3'
    httpclientVersion='4.5.1'
    fastcsvVersion='1.0.3'
    asciitableVersion='0.3.2'
    externalDir = 'src/main/external/'
}

ext{
    javalinVersion = project.hasProperty('javalinVersion') ? project.getProperty('javalinVersion') : '4.0.0'
    baseline = project.hasProperty('baseline') ? project.getProperty('baseline') : '1.0.0'
    profileName = project.hasProperty('profileName') ? project.getProperty('profileName') : ''
    iterations = project.hasProperty('iterations') ? project.getProperty('iterations') : '20'
    iterationTime = project.hasProperty('iterationTime') ? project.getProperty('iterationTime') : '10000'
    mode = project.hasProperty('mode') ? project.getProperty('mode') : 'benchmark'
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.reposilite.com/snapshots"
    }
}

dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    // Javalin
    implementation "io.javalin:javalin:$javalinVersion"

    //JMH
    implementation "org.openjdk.jmh:jmh-core:$jmhVersion"
    kapt "org.openjdk.jmh:jmh-generator-annprocess:$jmhVersion"

    //sl4f
    implementation "org.slf4j:slf4j-api:$sl4jVersion"
    implementation "org.slf4j:log4j-over-slf4j:$sl4jVersion"

    //okhttp3
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"

    //logback
    implementation "ch.qos.logback:logback-classic:$logbackVersion"

    //httpcomponents
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: "$httpclientVersion"

    // https://mvnrepository.com/artifact/de.siegmar/fastcsv
    implementation group: 'de.siegmar', name: 'fastcsv', version: "$fastcsvVersion"

    implementation "de.vandermeer:asciitable:$asciitableVersion"
}

sourceSets{
    main.kotlin.srcDirs += "${externalDir}${javalinVersion}"
}

task benchmark(type:JavaExec){
    mainClass = 'javalin.performance.JavalinKt'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = 
         ["-Dversion=${javalinVersion}","-Dmode=${mode}",
         "-DprofileName=${profileName}","-Diterations=${iterations}",
         "-DiterationTime=${iterationTime}"]
}

task compare(type:JavaExec){
    mainClass = 'javalin.performance.BenchmarkCompareKt'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = 
        ["-DprofileName=${profileName}",
        "-Dbaseline=${baseline}","-DjavalinVersion=${javalinVersion}"]
}
